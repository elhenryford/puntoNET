// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pruevaDB1.Data;

#nullable disable

namespace pruevaDB1.Migrations
{
    [DbContext(typeof(pruevaDB1Context))]
    partial class pruevaDB1ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoPuntoNET.Model.Atleta", b =>
                {
                    b.Property<int>("idAtleta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idAtleta"));

                    b.Property<string>("discapacidades")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("edad")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idAtleta");

                    b.ToTable("Atleta");
                });

            modelBuilder.Entity("ProyectoPuntoNET.Model.Carrera", b =>
                {
                    b.Property<int>("idCarrera")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCarrera"));

                    b.Property<int>("cantidadPuntosControl")
                        .HasColumnType("int");

                    b.Property<int>("cuposDisponibles")
                        .HasColumnType("int");

                    b.Property<DateOnly>("fecha")
                        .HasColumnType("date");

                    b.Property<string>("mapa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCarrera");

                    b.ToTable("Carrera");
                });

            modelBuilder.Entity("ProyectoPuntoNET.Model.Participacion", b =>
                {
                    b.Property<int>("idParticipacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idParticipacion"));

                    b.Property<int>("atletaidAtleta")
                        .HasColumnType("int");

                    b.Property<int>("carreraidCarrera")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("tiempoFinal")
                        .HasColumnType("time");

                    b.Property<string>("tiempos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idParticipacion");

                    b.HasIndex("atletaidAtleta");

                    b.HasIndex("carreraidCarrera");

                    b.ToTable("Participacion");
                });

            modelBuilder.Entity("ProyectoPuntoNET.Model.Participacion", b =>
                {
                    b.HasOne("ProyectoPuntoNET.Model.Atleta", "atleta")
                        .WithMany("participaciones")
                        .HasForeignKey("atletaidAtleta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoPuntoNET.Model.Carrera", "carrera")
                        .WithMany("corredores")
                        .HasForeignKey("carreraidCarrera")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("atleta");

                    b.Navigation("carrera");
                });

            modelBuilder.Entity("ProyectoPuntoNET.Model.Atleta", b =>
                {
                    b.Navigation("participaciones");
                });

            modelBuilder.Entity("ProyectoPuntoNET.Model.Carrera", b =>
                {
                    b.Navigation("corredores");
                });
#pragma warning restore 612, 618
        }
    }
}
