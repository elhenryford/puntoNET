// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pruevaDB1.Data;

#nullable disable

namespace pruevaDB1.Migrations
{
    [DbContext(typeof(pruevaDB1Context))]
    [Migration("20251026194059_Migra2")]
    partial class Migra2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("pruevaDB1.Components.Model.Atleta", b =>
                {
                    b.Property<int>("IdAtleta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAtleta"));

                    b.Property<string>("Discapacidades")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAtleta");

                    b.ToTable("Atleta");
                });

            modelBuilder.Entity("pruevaDB1.Components.Model.Carrera", b =>
                {
                    b.Property<int>("IdCarrera")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCarrera"));

                    b.Property<int>("CantidadPuntosControl")
                        .HasColumnType("int");

                    b.Property<int>("CuposDisponibles")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<string>("Mapa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCarrera");

                    b.ToTable("Carrera");
                });

            modelBuilder.Entity("pruevaDB1.Components.Model.Participacion", b =>
                {
                    b.Property<int>("IdParticipacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdParticipacion"));

                    b.Property<int>("AtletaIdAtleta")
                        .HasColumnType("int");

                    b.Property<int>("CarreraIdCarrera")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("TiempoFinal")
                        .HasColumnType("time");

                    b.Property<string>("Tiempos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdParticipacion");

                    b.HasIndex("AtletaIdAtleta");

                    b.HasIndex("CarreraIdCarrera");

                    b.ToTable("Participacion");
                });

            modelBuilder.Entity("pruevaDB1.Components.Model.Participacion", b =>
                {
                    b.HasOne("pruevaDB1.Components.Model.Atleta", "Atleta")
                        .WithMany("Participaciones")
                        .HasForeignKey("AtletaIdAtleta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pruevaDB1.Components.Model.Carrera", "Carrera")
                        .WithMany("Corredores")
                        .HasForeignKey("CarreraIdCarrera")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atleta");

                    b.Navigation("Carrera");
                });

            modelBuilder.Entity("pruevaDB1.Components.Model.Atleta", b =>
                {
                    b.Navigation("Participaciones");
                });

            modelBuilder.Entity("pruevaDB1.Components.Model.Carrera", b =>
                {
                    b.Navigation("Corredores");
                });
#pragma warning restore 612, 618
        }
    }
}
