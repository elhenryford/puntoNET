@page "/atleta/details"
@using Microsoft.EntityFrameworkCore
@using pruevaDB1.Components.Model
@using pruevaDB1.Components.Model
@inject IDbContextFactory<pruevaDB1.Data.pruevaDB1Context> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Atleta</h2>
    <hr />
    @if (atleta is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">nombre</dt>
            <dd class="col-sm-10">@atleta.Nombre</dd>
            <dt class="col-sm-2">edad</dt>
            <dd class="col-sm-10">@atleta.Edad</dd>
            <dt class="col-sm-2">discapacidades</dt>
            <dd class="col-sm-10">@atleta.Discapacidades</dd>
        </dl>
        <div>
            <a href="@($"/atleta/edit?idatleta={atleta.IdAtleta}")">Edit</a> |
            <a href="@($"/atleta")">Back to List</a>
        </div>
    }
</div>

@code {
    private Atleta? atleta;

    [SupplyParameterFromQuery]
    private int idAtleta { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        atleta = await context.Atleta.FirstOrDefaultAsync(m => m.IdAtleta == idAtleta);

        if (atleta is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
