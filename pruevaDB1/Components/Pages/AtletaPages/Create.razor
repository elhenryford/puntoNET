@page "/atleta/create"
@using Microsoft.EntityFrameworkCore
@using pruevaDB1.Components.Model
@inject IDbContextFactory<pruevaDB1.Data.pruevaDB1Context> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Crear Atleta</PageTitle>

<h3>Crear Atleta</h3>

<EditForm Model="atleta" OnValidSubmit="AddAtleta">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="nombre" class="form-label">Nombre</label>
        <InputText id="nombre" class="form-control" @bind-Value="atleta.Nombre" />
    </div>

    <div class="mb-3">
        <label for="edad" class="form-label">Edad</label>
        <InputNumber id="edad" class="form-control" @bind-Value="atleta.Edad" />
    </div>

    <div class="mb-3">
        <label for="discapacidades" class="form-label">Discapacidades</label>
        <InputText id="discapacidades" class="form-control" @bind-Value="atleta.Discapacidades" />
    </div>

    <button type="submit" class="btn btn-primary">Guardar</button>
</EditForm>

@if (mensaje != null)
{
    <div class="alert alert-success mt-3">@mensaje</div>
}

<div class="mt-3">
    <a href="/atleta">Volver a la lista</a>
</div>

@code {
    private Atleta atleta = new();
    private string? mensaje;

    private async Task AddAtleta()
    {
        try
        {
            using var context = DbFactory.CreateDbContext();
            context.Atleta.Add(atleta);
            await context.SaveChangesAsync();
            mensaje = $"Atleta guardado correctamente con numero: {atleta.IdAtleta}";
            atleta = new Atleta();
        }
        catch (DbUpdateException dbEx)
        {
            mensaje = $"Error al guardar atleta: {dbEx.InnerException?.Message ?? dbEx.Message}";
        }
        catch (Exception ex)
        {
            mensaje = $"Error inesperado: {ex.Message}";
        }
    }
}
