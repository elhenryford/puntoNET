@page "/login"
@using Microsoft.AspNetCore.Components
@using System.ComponentModel.DataAnnotations
@using Microsoft.EntityFrameworkCore
@inject NavigationManager NavigationManager
@using pruevaDB1.Components.Model
@using pruevaDB1.Data
@inject IDbContextFactory<pruevaDB1.Data.pruevaDB1Context> DbFactory


<PageTitle>Login</PageTitle>

<h3>Iniciar Sesión</h3>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger">@ErrorMessage</div>
}

<EditForm Model="@loginData" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="username" class="form-label">Usuario</label>
        <InputText id="username" class="form-control" @bind-Value="loginData.Username" />
    </div>

    <div class="mb-3">
        <label for="password" class="form-label">Contraseña</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="loginData.Password" />
    </div>

    <button type="submit" class="btn btn-primary">Entrar</button>
</EditForm>

@code {
    private LoginData loginData = new(); 
    private pruevaDB1Context context = default!;
    private string? ErrorMessage;

    private async Task HandleLogin()
    {

        if (loginData.Username == "admin" && loginData.Password == "1234")
        {
            NavigationManager.NavigateTo("/carreras");
        }
        else
        {
            context = DbFactory.CreateDbContext();
            List<Atleta> atletas = await context.Atleta.ToListAsync();
            foreach (Atleta atleta in atletas)
            {
                if (atleta.mail == loginData.Username && atleta.password == loginData.Password)
                {
                    //HttpContext.Session.SetInt32("usr", atleta.IdAtleta);
                    NavigationManager.NavigateTo($"/atleta/inscribirse/{atleta.IdAtleta}");
                    return;
                }
            }
            ErrorMessage = "Usuario o contraseña incorrectos.";
        }
    }

    public class LoginData
    {
        public string? Username { get; set; }

        public string? Password { get; set; }
    }
}
